/*
  这道题我一开始采用的数组存储--逐个比较，找到插入新数的位置--输出的做法。最开始犯了一个错误，新数的位置多加了一个，最后一次自增操作应该撤销。
  第二遍看时，想到不必使用数组存储，可以在遍历的过程中进行比较，决定何时输出。
***********************************
  题目描述
有一个已排好序的数组，要求输入一个数后，按原来排序的规律将它插入到数组中。

假设数组长度为10，数组中前9个数（这9个数要求从键盘上输入，输入时要满足自小到大的输入顺序）已经按从小到大进行排序。

然后再从键盘上输入一个整数，将此整数插入到前有序的9个数中，使得最终的10个数依然是从小到大有序的。

输入
第一行输入以空格分隔的9个整数数，要求按从小到大的顺序输入。

第二行输入一个整数

输出
从小到大输出这10个数，每个数一行。
样例输入
1 11 21 31 41 51 61 71 81
45
样例输出
1
11
21
31
41
45
51
61
71
81
提示
定义数组时，把数组长度定义为10.
*/

#include<stdio.h>
 
int main()
{
    int a[10];
    int num = 0;
    int i;
    for(i=0; i<9; i++){
        scanf("%d", &a[i]);
    }
    scanf("%d", &num);
    
    i = 0;
    while(num>a[i++]);
    i = i - 1;               // 最开始忘了这一句
    for(int j=8; j>=i; j--){
        a[j+1] = a[j];
    }
    a[i] = num;
    for(i=0 ;i<10; i++){
        printf("%d\n", a[i]);
    }
    return 0;
}
